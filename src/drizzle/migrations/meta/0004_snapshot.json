{
  "id": "098280b6-93b8-4424-926f-1ad557cd94ea",
  "prevId": "ed62d4ba-a583-4772-bf05-bc91fc9347f5",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.countries": {
      "name": "countries",
      "schema": "",
      "columns": {
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.professionals": {
      "name": "professionals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "credential": {
          "name": "credential",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fromIrs": {
          "name": "fromIrs",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "professionals_country_index": {
          "name": "professionals_country_index",
          "columns": [
            {
              "expression": "country",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "professionals_name_index": {
          "name": "professionals_name_index",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "professionals_country_countries_code_fk": {
          "name": "professionals_country_countries_code_fk",
          "tableFrom": "professionals",
          "tableTo": "countries",
          "columnsFrom": [
            "country"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "professionals_id_unique": {
          "name": "professionals_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.reviews": {
      "name": "reviews",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "professionalId": {
          "name": "professionalId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "overallRating": {
          "name": "overallRating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "valueRating": {
          "name": "valueRating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "complexity": {
          "name": "complexity",
          "type": "complexity",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "useAgain": {
          "name": "useAgain",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "reviews_professionalId_index": {
          "name": "reviews_professionalId_index",
          "columns": [
            {
              "expression": "professionalId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "reviews_professionalId_professionals_id_fk": {
          "name": "reviews_professionalId_professionals_id_fk",
          "tableFrom": "reviews",
          "tableTo": "professionals",
          "columnsFrom": [
            "professionalId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "reviews_country_countries_code_fk": {
          "name": "reviews_country_countries_code_fk",
          "tableFrom": "reviews",
          "tableTo": "countries",
          "columnsFrom": [
            "country"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reviews_id_unique": {
          "name": "reviews_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.complexity": {
      "name": "complexity",
      "schema": "public",
      "values": [
        "simple",
        "moderate",
        "complex",
        "very complex"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.professionals_with_stats": {
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credential": {
          "name": "credential",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "reviewCount": {
          "name": "reviewCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "useAgainPercent": {
          "name": "useAgainPercent",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\n    SELECT \n      p.*,\n      COALESCE(AVG(r.\"overallRating\")::numeric(10,2), 0) as rating,\n      COUNT(r.id) as \"reviewCount\",\n      CASE \n        WHEN COUNT(r.id) > 0 \n        THEN (SUM(CASE WHEN r.\"useAgain\" THEN 1 ELSE 0 END)::float / COUNT(r.id) * 100)::numeric(10,2)\n        ELSE 0 \n      END as \"useAgainPercent\"\n    FROM professionals p\n    LEFT JOIN reviews r ON p.id = r.\"professionalId\"\n    GROUP BY p.id, p.name, p.credential, p.address, p.country\n  ",
      "name": "professionals_with_stats",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}